
  # TODO

  - Customize/rewrite Series[]
  
  # QuotientStructure

    Calculate the equivalence of two QuotientStructure is very difficult. If a
    index has an unique location (see Utility`OccurrenceSequence`FillLocation),
    then we can label this index in a unique way (since such type of location
    is orderable). But if two or more indexes share a same location, things
    will become much more complicated. For example:

        ┌─╴c╶─╴a╶─┐            ┌─╴e╶─╴c╶─┐
        ├─╴b╶─╴c╶─┤            ├─╴d╶─╴e╶─┤
      ╶─┼─╴a╶─╴b╶─┼─╴        ╶─┼─╴c╶─╴d╶─┼─╴
        ├─╴d╶─╴e╶─┤            ├─╴a╶─╴b╶─┤
        └─╴e╶─╴d╶─┘            └─╴b╶─╴a╶─┘
    
    Five indexes (a,b,c,d,e) in these two structures all have the same
    location {{1,1},{1,2}}, but it's very difficult to correctly order between
    the three-element set and double-element set.

  # Symmetry

    The very rich tensorial symmetry is impossible to be expressed only by
    Mathematica's Orderless property, which is basically a simple
    all-permutation-symmetry, with phase always equal to 1.

    Once the indexed format of tensor is constructed, symmetry can be
    calculate with user-defined enumerating method.

  # User-friendly

    Using MakeBoxes + InterpretationBox an expression can be display in a
    succinct way, while keep all the information. Use InputForm to transform a
    potentially non-lossless interpretation back into InputForm.

vim:ft=markdown
